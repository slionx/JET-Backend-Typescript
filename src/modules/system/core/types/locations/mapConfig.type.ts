import { TlocationsBanner } from "./banner.type";
import { TlocationsBossLocationSpawn } from "./bossLocationSpawn.type";
import { TlocationsMinMaxBots } from "./botsMinMax.type";
import { TlocationsExit } from "./exit.type";
import { TlocationsLoot } from "./loot.type";
import { TlocationsSpawnPointParams } from "./spawnPointParams.type";
import { TlocationsWave } from "./wave.type";

export type TlocationsMapConfig = {
    Enabled: boolean;
    Locaked: boolean;
    Insurance: boolean;
    SafeLocation: boolean;
    Name: string;
    Description: string;
    Scene: {
        path: string;
        rcid: string;
    };
    Area: number;
    RequiredPlayerLevel: number;
    MinPlayers: number;
    MaxPlayers: number;
    exit_count: number;
    exit_access_time: number;
    exit_time: number;
    Preview: {
        path: string;
        rcid: string;
    };
    IconX: number;
    IconY: number;
    filter_ex: object[];
    waves: TlocationsWave[];
    limits: object[];
    AveragePlayTime: number;
    AveragePlayerLevel: number;
    escape_time_limit: number;
    Rules: string;
    IsSecret: boolean;
    doors: object[];
    tmp_location_field_remove_me: number;
    MinDistToExitPoint: number;
    MaxDistToFreePoint: number;
    MinDistToFreePoint: number;
    MaxBotPerZone: number;
    OpenZones: string;
    OcculsionCullingEnabled: boolean;
    GlobalLootChanceModifier: number;
    OldSpawn: boolean;
    NewSpawn: boolean;
    BotMax: number;
    BotStart: number;
    BotStop: number;
    BotMaxTimePlayer: number;
    BotSpawnTimeOnMin: number;
    BotSpawnTimeOnMax: number;
    BotSpawnTimeOffMin: number;
    BotSpawnTimeOffMax: number;
    BotMaxPlayer: number;
    BotEasy: number;
    BotNormal: number;
    BotHard: number;
    BotImpossible: number;
    BotAssault: number;
    BotMarksman: number;
    DisabledScavExits: "";
    AccessKeys: object[];
    UnixDateTime: number;
    users_gather_seconds: number;
    users_spawn_seconds_n: number;
    users_spawn_seconds_n2: number;
    users_summon_seconds: number;
    sav_summon_seconds: number;
    matching_min_seconds: number;
    MinMaxBots: TlocationsMinMaxBots;
    BotLocationModifier: TlocationsBossLocationSpawn;
    exits: TlocationsExit[];
    DisabledForScav: boolean;
    BossLocationSpawn: TlocationsBossLocationSpawn[];
    SpawnPointParams: TlocationsSpawnPointParams[];
    Id: string;
    _Id: string;
    Loot: TlocationsLoot[]; // this should be loot type here
    Banners: TlocationsBanner[];
};